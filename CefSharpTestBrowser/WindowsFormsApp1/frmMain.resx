<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA4
        BwAAAk1TRnQBSQFMAgEBAgEAAUABAAFAAQABGAEAARgBAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEgBgABJGoAA0kBhwT/CAADEgEZA+8B/gNQAZoQAAMCAQMDKwFCA0ABcANGAX4DOwFj
        Ax4BK/8AOQADQwF4BP8DSgGKCAADFQEdBP8DVAGmCAADMQFOA2MB0QPQAfoU/wOaAfADVgGxAxwBJ/8A
        KQADQwF4BP8DRgF+DAADFQEdBP8DVAGmAxEBFwNuAd8E/wPvAf4DWgHAAz8BbAMrAUIDJgE4AzEBTgNJ
        AYcDggHmBP8D7wH+A1ABmgMCAQPsAAMkATYDUgGnA2QBzwNpAdkDZAHPA1QBrwMrAUIUAANJAYcE/wNE
        AXsQAAMVAR0E/wNjAdEDqQHzBP8DUQGcAxIBGRgAAwEBAgMmATkDaQHXBP8DXwHMAwsBD+AAAzgBXgj/
        A7QB9gNgAc0DWgHBA18BzAOlAfIE/wPvAf4DPwFtAwABAQQAA0QBeQT/A0kBiBQAAxUBHQj/A8MB+AMp
        AT4rAAEBA1QBpgPvAf4DYAHLAwIBA9gAA4UB6AT/A24B3wMCAQMYAANaAb0E/wPXAfwDRAF5BP8DRQF8
        GAADFQEdCP8DXwHMAwQBBTAAA1QBpgT/A04BmNAAAwQBBQO0AfYE/wMgAS8kAAMWAR8DtAH2BP8DRAF7
        HAADAQECA0EBcgOFAegI/wPAAfcDVgGxAxwBKCQAAwEBAgNoAdYD7wH+AxsBJswAA2IB0wT/AxABFSwA
        AwQBBQO0AfYD1wH8AwABASAAAwEBAgMYASIDSAGFA24B3APvAf4DVwG4KAADJgE4BP8DVQGwyAADOQFf
        BP8DCgEONAADFgEfBP8DPwFtMAADEgEZAwYBCCgAAwEBAgOCAeYDmgHwyAADmgHwA2AByDwAA1oBwAT/
        ZAADSAGGBP8DHgErwAADAgEDBP8DHAEoQAAE/wMsAUMQAAMGAQgDBwEJSAADMQFOBP8DOwFjwAADRAF7
        BP9EAAOuAfQDVQGwEAADZwHYA24B3EgAAyUBNwT/A0QBe8AAA2kB2QPDAfhEAANiAc4DYgHQEAADbQHa
        A4UB6EgAAwEBAgM+AWsDDAEQwAADwAH3A38B5UQAA1oBwgNtAdoQAANYAboDwwH4AwIBA/8AEQADaQTX
        AfxEAANiAdADZAHPEAADRgF/BP8DLQFG/wARAAM/AW0E/0QAA8AB9wNTAagQAAMUARwD5wH9A1sBvigA
        AwgBCwNnAdUDWAG7AzABSwMKAQ3YAAT/AyMBMzwAAwIBAwT/AyYBOBQAA1wBxwT/AyIBMSQAAwcBCgNl
        AdQD0AH6CP8DVAGvAy8BSgMEAQbMAAOOAesDZAHSPAADewHjBP8YAAMdASkE/wOCAeYvAAEBAz8BbQz/
        A1oBwMwAAy4BRwT/AygBPDQAAyEBMAT/AzoBYRwAA0UBfQT/A2QB0jAAAx4BKwPKAfkE/wNfAczQAANd
        AcME/wMaASUsAAMQARYE/wOHAeojAAEBA1EBnwT/A4IB5gMiATEgAAMEAQYDQAFwA+8B/gO0AfYD1wH8
        A18BzNQACP8DJwE7JAADCgEOBP8DwwH4KwABAQNFAX0I/wNbAb4DLQFGAwIBAwwAAw4BEwNCAXMDgwHp
        BP8DwwH4AxwBJwOVAe8DXwHM2AADWwHEBP8DYgHTAyMBNBQAAx0BKQNgAcoE/wNlAdQDBAEGMAADHQEp
        A1wBxwPnAf0E/wPDAfgDgQHnA3oB5AOSAe0D7wH+BP8DmgHwA0oBjQMFAQcEAAOVAe8DXwHM3AADLgFI
        A44B6wj/A9cB/AOFAegDygH5CP8DmgHwAzoBYkAAAxYBHgNGAX8DWAG6A20B2gN2AeEDYgHQA1QBpgM3
        AVoDBAEFDAADlQHvA2ABy+gAA0ABbgNnAdgD1wH8A3AB2wNFAXwDAgEDeAADUQGiAzgBXMgAAUIBTQE+
        BwABPgMAASgDAAFgAwABGAMAAQEBAAEBBQABIAEBFgAD/wEAAv8B/AHHAYEB/wYAAv8B+AHGAQABPwYA
        Av8B8QHAAQABDwYAAf4BAwHjAcABfgEHBgAB+AEAAUcBwQH/AYMGAAHwAfwBDwHBAf8B4wYAAcMB/gEf
        AcABPwHhBgABxwH/AQ8B8AE/AfEGAAGPAf8BjwH/AT8B8QYAAZ8B/wHPAv8B+AYAAR8B/wHnAZ8B/wH4
        BgABPwH/AecBnwH/AfgGAAE/Af8B5wGfAf8B+AYAAT8B/wHnAY8C/wYAAT8B/wHnAY8C/wYAAT8B/wHn
        AY8B/AEfBgABnwH/AscB/AEDBgABnwH/Ac8BxwH/AQMGAAGPAf8BjwHjAf8BwwYAAccB/wEfAeAB/wED
        BgAB4wH+AT8B8AEcAQMGAAHwAfgBPwH8AQABEwYAAfgBAAL/AQABcwYAAf8BAwP/AfMGAAs=
</value>
  </data>
</root>